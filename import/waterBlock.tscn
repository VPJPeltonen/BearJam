[gd_scene load_steps=36 format=2]

[ext_resource path="res://import/waterBlock.glb" type="PackedScene" id=1]
[ext_resource path="res://import/water base.png" type="Texture" id=2]
[ext_resource path="res://import/water ripples.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=2]
default_input_values = [ 0, 0.0, 1, 0.15, 2, 0.0 ]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=4]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 30000.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 0.02 ]

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = ExtResource( 2 )
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=8]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=10]

[sub_resource type="VisualShader" id=11]
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded;

uniform sampler2D tex_frg_2 : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:12
	float n_out12p0 = TIME;

// ScalarFunc:10
	float n_out10p0 = sin(n_out12p0);

// ScalarOp:13
	float n_in13p1 = 30000.00000;
	float n_out13p0 = n_out10p0 / n_in13p1;

// ScalarOp:14
	float n_in14p1 = 0.02000;
	float n_out14p0 = n_out13p0 + n_in14p1;

// VectorCompose:11
	float n_in11p1 = 0.15000;
	float n_in11p2 = 0.00000;
	vec3 n_out11p0 = vec3(n_out14p0, n_in11p1, n_in11p2);

// Input:5
	float n_out5p0 = TIME;

// VectorOp:7
	vec3 n_out7p0 = n_out11p0 * vec3(n_out5p0);

// Input:8
	vec3 n_out8p0 = vec3(UV, 0.0);

// VectorOp:9
	vec3 n_out9p0 = n_out7p0 + n_out8p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out9p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -63, 201 )
flags/unshaded = true
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -120, 220 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( -800, 480 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( -600, 420 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( -840, 640 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( -520, 580 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1440, 460 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -1000, 380 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -1600, 420 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -1240, 440 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -1040, 540 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 7, 0, 9, 0, 8, 0, 9, 1, 9, 0, 2, 0, 5, 0, 7, 1, 11, 0, 7, 0, 12, 0, 10, 0, 10, 0, 13, 0, 13, 0, 14, 0, 14, 0, 11, 0 )

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )

[sub_resource type="VisualShaderNodeScalarOp" id=13]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 20000.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorCompose" id=14]
output_port_for_preview = 0
default_input_values = [ 0, 0.02, 1, 0.05, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 0.0, 1, 0.1 ]

[sub_resource type="VisualShaderNodeScalarOp" id=16]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=17]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=19]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=20]

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "time"

[sub_resource type="VisualShaderNodeTransformVecMult" id=22]
output_port_for_preview = 0
default_input_values = [ 0, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 ), 1, Vector3( 0, 0.05, 0 ) ]

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
output_port_for_preview = 0
default_input_values = [ 0, 0.1 ]
function = 1

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=25]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=26]

[sub_resource type="OpenSimplexNoise" id=27]
period = 23.5
persistence = 0.381
lacunarity = 1.69

[sub_resource type="NoiseTexture" id=28]
width = 49
height = 84
seamless = true
bump_strength = 32.0
noise = SubResource( 27 )

[sub_resource type="VisualShaderNodeTexture" id=29]
texture = SubResource( 28 )

[sub_resource type="VisualShader" id=30]
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded;

uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Input:9
	float n_out9p0 = TIME;

// ScalarFunc:8
	float n_out8p0 = cos(n_out9p0);

// ScalarOp:10
	float n_in10p1 = 20000.00000;
	float n_out10p0 = n_out8p0 / n_in10p1;

// ScalarOp:13
	float n_in13p1 = 10.00000;
	float n_out13p0 = n_out10p0 / n_in13p1;

// ScalarOp:12
	float n_in12p1 = 0.10000;
	float n_out12p0 = n_out13p0 + n_in12p1;

// VectorCompose:11
	float n_in11p2 = 0.00000;
	vec3 n_out11p0 = vec3(n_out10p0, n_out12p0, n_in11p2);

// TransformVectorMult:7
	mat4 n_in7p0 = mat4(vec4(1.00000, 0.00000, 0.00000, 0.0), vec4(0.00000, 1.00000, 0.00000, 0.0), vec4(0.00000, 0.00000, 1.00000, 0.0), vec4(0.00000, 0.00000, 0.00000, 1.0));
	vec3 n_out7p0 = (n_in7p0 * vec4(n_out11p0, 1.0)).xyz;

// Input:6
	float n_out6p0 = TIME;

// VectorOp:4
	vec3 n_out4p0 = n_out7p0 * vec3(n_out6p0);

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 + n_out3p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out5p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -63, 201 )
flags/unshaded = true
nodes/vertex/0/position = Vector2( 500, 180 )
nodes/vertex/3/node = SubResource( 25 )
nodes/vertex/3/position = Vector2( 60, 300 )
nodes/vertex/4/node = SubResource( 26 )
nodes/vertex/4/position = Vector2( 280, 220 )
nodes/vertex/5/node = SubResource( 29 )
nodes/vertex/5/position = Vector2( -260, 260 )
nodes/vertex/connections = PoolIntArray( 3, 0, 4, 1 )
nodes/fragment/0/position = Vector2( 340, 160 )
nodes/fragment/2/node = SubResource( 17 )
nodes/fragment/2/position = Vector2( -180, 120 )
nodes/fragment/3/node = SubResource( 18 )
nodes/fragment/3/position = Vector2( -760, 220 )
nodes/fragment/4/node = SubResource( 19 )
nodes/fragment/4/position = Vector2( -680, 60 )
nodes/fragment/5/node = SubResource( 20 )
nodes/fragment/5/position = Vector2( -460, 160 )
nodes/fragment/6/node = SubResource( 21 )
nodes/fragment/6/position = Vector2( -1080, 260 )
nodes/fragment/7/node = SubResource( 22 )
nodes/fragment/7/position = Vector2( -940, -20 )
nodes/fragment/8/node = SubResource( 23 )
nodes/fragment/8/position = Vector2( -1700, 20 )
nodes/fragment/9/node = SubResource( 24 )
nodes/fragment/9/position = Vector2( -1880, 40 )
nodes/fragment/10/node = SubResource( 13 )
nodes/fragment/10/position = Vector2( -1480, 20 )
nodes/fragment/11/node = SubResource( 14 )
nodes/fragment/11/position = Vector2( -1120, 20 )
nodes/fragment/12/node = SubResource( 15 )
nodes/fragment/12/position = Vector2( -1240, 120 )
nodes/fragment/13/node = SubResource( 16 )
nodes/fragment/13/position = Vector2( -1420, 180 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1, 3, 0, 5, 1, 6, 0, 4, 1, 7, 0, 4, 0, 9, 0, 8, 0, 11, 0, 7, 1, 8, 0, 10, 0, 10, 0, 11, 0, 12, 0, 11, 1, 10, 0, 13, 0, 13, 0, 12, 0, 5, 0, 2, 0, 4, 0, 5, 0 )

[sub_resource type="ShaderMaterial" id=31]
shader = SubResource( 30 )

[sub_resource type="BoxShape" id=32]
extents = Vector3( 2.21322, 1.84034, 2.56037 )

[node name="waterBlock" instance=ExtResource( 1 )]

[node name="WATER ARMETURE" parent="." index="0"]
transform = Transform( 0.25, 0, 0, 0, 0.25, 0, 0, 0, 0.25, 0, 0, 0 )

[node name="Plane011" parent="WATER ARMETURE/Skeleton" index="0"]
material/0 = SubResource( 12 )
material/1 = SubResource( 31 )

[node name="StaticBody" type="StaticBody" parent="WATER ARMETURE/Skeleton/Plane011" index="0"]

[node name="CollisionShape" type="CollisionShape" parent="WATER ARMETURE/Skeleton/Plane011/StaticBody" index="0"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 3.19873, 0 )
shape = SubResource( 32 )

[node name="AnimationPlayer" parent="." index="1"]
autoplay = "WaterMove"
